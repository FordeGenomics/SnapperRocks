manifest {
  description = 'Pipeline for bacterial analysis'
  mainScript = 'main.nf'
}

params {
  run_id        = "SR_Run"
  fastq         = "./Raw/*_R{1,2}.fastq.gz"
  store_path    = "/data/Compiled_tables"
  results       = "./Results"
  executor      = "local"
  container     = "singularity"
  db            = "/SnapperRocks/db"
  scripts       = "/SnapperRocks/scripts"
  trim          = true
  fastqc        = true
  filterqc      = false
  taxoprofile   = true
  metadata	= "false"
  assembly      = true
  qc		= true
  quast         = true
  amr           = true
  post          = true
  typing        = true
  resprofile    = true
  intrinsic     = true
  nesoni        = true
  pseudo        = true
  cluster       = true
  staph         = true
  njobs         = 4
  redcap        = false
  redcap_key    = ""
  ramdisk       = true
  ramdisk_path  = "/dev/shm"
}

if (params.container == "docker") {
  docker.enabled = true
  docker.fixOwnership = true
  docker.sudo = true
  docker.runOptions = "--volume '$params.store_path':'$params.store_path' --user \"`id -u`:`id -g`\""
}

if (params.container == "singularity") {
  singularity.enabled = true
  singularity.cacheDir = "/data/images"
  singularity.autoMounts = true
  process.containerOptions = "-B ${params.store_path}:${params.store_path}"
}

if (params.container != false) {
  params.psource       = "/SnapperRocks"
  params.db            = "/SnapperRocks/db"
  params.scripts       = "/SnapperRocks/scripts"
}

process {
  executor = params.executor
  errorStrategy = "ignore"

  publishDir.mode = "copy"

  withLabel: general {
    container = "file:///data/images/sr_general_db_0.9.img"
    cpus = 2
    memory = "4GB"
    time = "8h"
  }

  withLabel: general2 {
    container = "file:///data/images/sr_general_db_0.9.img"
    cpus = 4
    memory = "8GB"
    time = "8h"
  }

  withLabel: kraken {
    container = "file:///data/images/sr_kraken_db_0.9.img"
    cpus = 8
    memory = "96GB"
    time = "8h"
    if (params.ramdisk == true) {
      if (params.container == "docker") {
        containerOptions = "--volume '$params.store_path':'$params.store_path' --cap-add=SYS_ADMIN --security-opt apparmor:unconfined --user \"`id -u`:`id -g`\""
        containerOptions ="--cap-add=SYS_ADMIN --security-opt apparmor:unconfined"
        docker.runOptions = "--shm-size=88g"
      }
    }
  }

  withLabel: nesoni {
    container = "file:///data/images/sr_nesoni_0.8.img"
    cpus = 2
    memory = "4GB"
    time = "8h"
  }

}

trace {
  enabled = true
  file = "${params.results}/SR_trace.txt"
}
timeline {
  enabled = true
  file = "${params.results}/SR_timeline.html"
}
report {
  enabled = true
  file = "${params.results}/SR_report.html"
}
dag {
  enabled = true
  file = "${params.results}/SR_flowchart_dag.svg"
}

